image: vratislav/gitlab-ci-fastlane-android

stages:
  - environment
  - build
  - test
  - internal
  - alpha
  - beta
  - production
  - stop

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew


cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/
#
#.updateContainerJob:
#  image: docker:stable
#  stage: environment
#  services:
#    - docker:dind
#  script:
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
#    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
#    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#
#updateContainer:
#  extends: .updateContainerJob
#  only:
#    changes:
#      - Dockerfile
#
#ensureContainer:
#  extends: .updateContainerJob
#  allow_failure: true
#  before_script:
#    - "mkdir -p ~/.docker && echo '{\"experimental\": \"enabled\"}' > ~/.docker/config.json"
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    # Skip update container `script` if the container already exists
#    # via https://gitlab.com/gitlab-org/gitlab-ce/issues/26866#note_97609397 -> https://stackoverflow.com/a/52077071/796832
#    - docker manifest inspect $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG > /dev/null && exit || true

.build_job:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: build
  before_script:
    # We store this binary file in a variable as hex with this command, `xxd -p thorium-android-app.jks`
    # Then we convert the hex back to a binary file
    - echo "$signing_jks_file_hex" | xxd -r -p - > android-signing-keystore.jks
    # We add 1047 to get this high enough above current versionCodes that are published
    - "export VERSION_CODE=$((1047 + $CI_PIPELINE_IID)) && echo $VERSION_CODE"
    - "export VERSION_SHA=`echo ${CI_COMMIT_SHA:0:8}` && echo $VERSION_SHA"
    # Move current version to a new release notes for fastlane
    # This happens for every build, but only on master and tags this change gets submitted as an MR by `buildCreateReleaseNotes` task
#    - mv ./fastlane/metadata/android/en-GB/changelogs/CURRENT_VERSION.txt "./fastlane/metadata/android/en-GB/changelogs/$VERSION_CODE.txt"
  after_script:
    - rm -f android-signing-keystore.jks || true
  artifacts:
    paths:
      - app/build/outputs

buildDebug:
  extends: .build_job
  script:
    - /usr/local/bin/bundle exec fastlane buildDebug

#buildCreateReleaseNotes:
#  extends: .build_job
#  script:
#    - ./ci-scripts/create-changelog-mr.sh
#  only:
#    - tags

buildRelease:
  extends: .build_job
  script:
    - bundle exec fastlane buildRelease
  environment:
    name: production

testDebug:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
  dependencies:
    - buildDebug
  script:
    - bundle exec fastlane test

publishInternal:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: internal
  dependencies:
    - buildRelease
  when: manual
  before_script:
    - echo $google_play_service_account_api_key_json > ~/google_play_api_key.json
  after_script:
    - rm -f ~/google_play_api_key.json
  script:
    - bundle exec fastlane internal

.promote_job:
#  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  when: manual
  dependencies: []
  before_script:
    - echo $google_play_service_account_api_key_json > ~/google_play_api_key.json
  after_script:
    - rm -f ~/google_play_api_key.json

promoteAlpha:
  extends: .promote_job
  stage: alpha
  script:
    - bundle exec fastlane promote_internal_to_alpha

promoteBeta:
  extends: .promote_job
  stage: beta
  script:
    - bundle exec fastlane promote_alpha_to_beta

promoteProduction:
  extends: .promote_job
  stage: production
  # We only allow production promotion on `master` because
  # it has its own production scoped secret variables
  only:
    - tags
  script:
    - bundle exec fastlane promote_beta_to_production
